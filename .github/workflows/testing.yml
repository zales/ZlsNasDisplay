name: Testing

on:
  push:
    branches:
    - main
  pull_request:

jobs:
  linting:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v5
    - name: Install Poetry
      run: pipx install poetry
    - name: Configure poetry
      run: |
        poetry config virtualenvs.create true
        poetry config virtualenvs.in-project true
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: "3.11"
        cache: "poetry"
    - name: Install Dependencies
      run: poetry install
    - name: Ruff format check
      run: poetry run ruff format zlsnasdisplay tests --check
    - name: Lint with ruff
      run: poetry run ruff check .
    - name: Type check with mypy
      run: poetry run mypy zlsnasdisplay --exclude 'waveshare_epd'
      continue-on-error: true

  testing:
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.11", "3.12", "3.13"]
        os: [ubuntu-latest]
    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/checkout@v5
    - name: Install Poetry
      run: pipx install poetry
    - name: Configure poetry
      run: |
        poetry config virtualenvs.create true
        poetry config virtualenvs.in-project true
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
        cache: "poetry"
    - name: Install Dependencies (skip optional hardware deps)
      run: |
        # Install dependencies without optional lgpio (requires Raspberry Pi hardware)
        # conftest.py will mock all GPIO/SPI dependencies for testing
        poetry install --with dev --sync 2>&1 | tee install.log || true
        # If lgpio fails, continue anyway (it's optional and mocked in tests)
        if grep -q "lgpio" install.log && grep -q "failed" install.log; then
          echo "lgpio build failed (expected in CI - hardware dependency), continuing..."
        fi
    - name: Run tests with mocked GPIO
      env:
        # Use mock pin factory for gpiozero in CI
        GPIOZERO_PIN_FACTORY: mock
      run: |
        # Ignore build directories and Matter tests (require CircuitMatter runtime)
        poetry run pytest -v --cov-report=xml --cov-report=term-missing \
          --ignore=deb_dist --ignore=dist --ignore=debian \
          --ignore=tests/test_matter_device.py
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v4
      if: matrix.python-version == '3.11' && matrix.os == 'ubuntu-latest'
      with:
        files: ./coverage.xml
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: false
